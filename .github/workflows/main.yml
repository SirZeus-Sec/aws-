name: TruffleHog Secret Scan

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  secret-scan:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install TruffleHog
        run: |
          pip install trufflehog

      - name: Identify Changed Files
        id: changed-files
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git diff --name-only origin/${{ github.event.pull_request.base.ref }} > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt

      - name: Scan Changed Files with TruffleHog
        id: trufflehog-scan
        run: |
          mkdir -p trufflehog_results
          while IFS= read -r file; do
            echo "Scanning $file..."
            trufflehog filesystem --json $file > trufflehog_results/"$(basename "$file").json"
          done < changed_files.txt

      - name: Check for Secrets
        id: check-secrets
        run: |
          found_secrets=false
          for result in trufflehog_results/*.json; do
            if [ -s "$result" ]; then
              found_secrets=true
              echo "Secrets found in $(basename "$result"):"
              cat "$result"
            fi
          done
          echo "secrets_found=$found_secrets" >> $GITHUB_ENV

      - name: Fail if Secrets Found
        if: env.secrets_found == 'true'
        run: |
          echo "Secrets detected. Failing the workflow."
          exit 1

      - name: Post Comment on PR
        if: failure()
        run: |
          comment="ðŸš¨ TruffleHog detected secrets in the following files:\n"
          for result in trufflehog_results/*.json; do
            if [ -s "$result" ]; then
              comment+="$(basename "$result")\n"
              comment+="\`\`\`\n$(cat "$result")\n\`\`\`\n"
            fi
          done
          pr_number=${{ github.event.pull_request.number }}
          payload=$(jq -n --arg body "$comment" '{body: $body}')
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Content-Type: application/json" \
               -d "$payload" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$pr_number/comments"
